// Apple_pay校验
message IapVerify{
	required string receipt = 1;   // 苹果发来的数据，base64的大字符串
	required string bundle_id = 2; // 苹果发过来的包名
}

message ResultVerify{
    required Status status = 1;      // 返回状态;0-请求失败，1-请求成功
    required string info = 2;        // 返回描述;请求超时，请稍后重试;苹果返回数据有误，请稍后重试;购买失败
    optional string product_id = 3;  // 物品id
}
 // 玩偶购买渠道验证
message ChannelSend{
	required string mac = 1;  
	required string channel = 2; // 渠道号
}

message ResultChannel{
    required Status status = 1;      // 返回状态;
    required string info = 2;        // 返回描述;
    optional bool is_show = 3;       // 是否显示玩偶购买按钮；
	optional int32 type = 4;         // 展示类型：1-网页；2-微信公众号图
}

message SubmitAddressInfo{
    required string mac = 1;
    required UserInfoExtra addressInfo = 2; // 用户寄送地址信息
}

message UserInfoExtra{
    required string user_name = 1; // 真实名字
    required string phone = 2;     // 手机号码
    required string province = 3;  // 省
    required string city = 4;      // 市
    required string address = 5;   // 住址
}
 //默认返回数据格式

//数据返回状态
enum Status {
	FAILURE = 0;
	SUCCESS = 1;
	MESSAGE = 2;
}
message Default_out {
	required Status status = 1;//返回状态
	required string info = 2;//返回描述
	optional string message= 3;
}
// 邮件系统
message GetEmail {
	required string mac = 1;		// 玩家唯一识别码
}

message ReturnEmailList {
	required Status status = 1;		// 返回状态
	required string info = 2;		// 返回描述
	repeated EmailInfo lists = 3;	// 邮件列表
}

enum EmailType {
	GENERAL_MAIL = 1;    // 个人邮件
	PUBLIC_MAIL = 2;     // 全局邮件
}

message Bonus {
	required int32 id = 1;         // 奖品id
	required int32 num = 2;        // 奖品数量
}

message EmailInfo {
	// HEAD
	required string mail_id = 1;        // 邮件id
	required string send_time = 2;      // 发送时间，e.g:2017-08-22
	required string expire_time = 3;    // 有效时间，e.g:2017-08-22
	required EmailType type = 4;        // 邮件类型
	optional int32 send_id = 5;         // 发送邮件 - 玩家id
	optional int32 receiver_id = 6;     // 接受邮件 - 玩家id
	
	// BODY
	required string title = 7;          // 邮件标题
	required string content = 8;        // 邮件内容,内容格式协定
	repeated Bonus bonusExtra = 9;      // 邮件奖励
}// 兑换码
message ExchangeSend{
	required string mac = 1;   
	required string code = 2; // 兑换码
	required string channel = 3; // 渠道号
}

message ResultExchange{
    required Status status = 1;      // 返回状态;
    required string info = 2;        // 返回描述;
    repeated ExchangeItem items = 3;  // 兑换的道具列表
}

message ExchangeItem {
	required int32 id = 1; //道具id
	required int32 num = 2; //道具数量
 }

//********************【part1】*******************

//Url : UpLoadFarmData   上传数据               参数：FarmInfo , 上传操作：进游戏/种植/浇水/杀虫/收获/离开游戏,延迟上传 
                                              //返回：FarmServiceTime
//地址：	/api/public/farm_bak

//Url : VisitOthersFarm  获取玩家农场信息     参数：VisitFarmInfo   定向访问（回访）/ 随机访问(visitId = "")
                                              //返回：FarmInfo
//地址：	/api/public/farm_visit


//作物状态
enum CropBuff
{
    Thirsty = 1;   //缺水
    Insects = 2;   //蛀虫
}

// 作物
message CropInfo {
	required int32 id = 1;
	required string plantTime = 2;
	repeated CropBuff states = 3;
	required bool stealable = 4;//是否可偷
	optional int32 stolenTimes = 5;  //被偷次数,请求农场数据时可以忽略，返回数据包含，访问操作时使用
}

// 土地
message LandInfo {
	required int32 id = 1;   //started from 0
	required bool isHasCrop = 2;
	optional CropInfo crop = 3;
}

// 农场info
message FarmInfo {
	optional string mac = 1;
	repeated LandInfo lands = 2;
}

// 返回服务器时间
message FarmServiceTime{
	required Status status = 1;//返回状态
	required string info = 2;//返回描述
	required string time = 3;
}


//农场玩家info
message FarmUserInfo {
	required int32 visitId = 1;
	required string name = 2;
	required string exp = 3;
	optional string avatar = 4;
}
// 访问别人农场需要的参数
message VisitFarmInfo{
	required string mac = 1;
	required string visitId = 2;
}
// 返回农场info
message ReturnFarmInfo{
	required Status status = 1;//返回状态
	required string info = 2;//返回描述
	optional FarmUserInfo userinfo = 3;
	optional FarmInfo message = 4;
}

//***************************************


//********************【part2】*******************

//Url : VisitOperation   访问操作   包括：给别人浇水/给别人除虫/偷菜  ,参数：FarmOpInfoList
                                                                   //返回：NormalBoolRet
//地址：	/api/public/farm_op


//操作类型
enum FarmOpType
{
    helpWater = 1;         //帮助浇水
    helpKillInsects = 2;   //帮助杀虫
	steal = 3;             //偷菜
}

message FarmOpInfo{
	required LandInfo land = 1;
	required FarmOpType opType = 2;
}

message FarmOpInfoList{
	required string mac = 1;
	required int32 visitId = 2;
	repeated FarmOpInfo lists = 3;
}

message NormalBoolRet{
	required Status status = 1;//返回状态
	required string info = 2;//返回描述
}

//***************************************

//********************【part3】*******************

//GetNewMessage       获取最新消息   参数：FarmMessageReqInfo
                                   //返回：FarmMessageInfo
//地址：	/api/public/farm_sms


//农场消息请求
message FarmMessageReqInfo {
	required string mac = 1;
}

//消息体
message FarmMsgItemInfo {
	required FarmUserInfo userinfo = 1;
	required string time = 2;
	required FarmOpType opType = 3;
	repeated LandInfo lands = 4;    //操作地块列表
}

//农场消息列表
message FarmMessageInfo {
	required Status status = 1;//返回状态
	required string info = 2;//返回描述
	repeated FarmMsgItemInfo lists = 3;
}



//***************************************//主要功能 - 好友列表，添加好友，删除好友，查询好友
/**
 * 好友功能 - 好友列表；p.s：一次性返回好友列表
 */ 
// 请求好友列表
message GetFriendList{
	required string mac = 1; // 用户唯一标识(SDK_ID)
}

// 返回好友列表
message ReturnFriendList{
	required Status status = 1;         // 返回状态
	required string info = 2;           // 返回描述
	repeated FriendInfo friendInfo = 3; // 好友信息
	optional int32 myEggNum = 4;        // 本周鸡蛋数
	optional int32 myFlowerNum = 5;     // 本周鲜花数
	optional int32 myFansNum = 6;       // 粉丝数
}

// 好友信息
message FriendInfo{
	required int32 id = 1;        // 好友ID
	required string name = 2;     // 用户名
	required int32 userHead = 3;  // 头像ID
	required string exp = 4;      // 经验
	optional bool stolenFlag = 5; // 可偷取标志；true - 可偷，false - 不可偷
	optional bool vip = 6;        // 是否为vip；true - 是，false - 否
	optional bool is_npc = 7;     // 是否为npc玩家；true - 是，false - 否
	optional string game_score = 8; // 游戏分数，json格式 [{"type":1, "score":1000}, {}]
}

/**
 * 好友功能 - 添加好友
 */
// 请求添加好友
message FollowFriend{
	required string mac = 1;    // 用户唯一标识(SDK_ID)
	required int32 id = 2;     // 所添加好友ID
}

// 返回添加结果 Default_out

/**
 * 好友功能 - 一键添加
 */
// 批量请求添加好友
message FollowFriends{
	required string mac = 1;    // 用户唯一标识(SDK_ID)
	repeated int32 id = 2;     // 添加好友的ID数组
}

// 返回添加结果 Default_out

/**
 * 好友功能 - 删除好友
 */
message UnfollowFriend{
	required string mac = 1; // 用户唯一标识(SDK_ID)
	required int32 id = 2;   // 所删除好友ID
}

// 返回删除结果 Default_out

/**
 * 好友功能 - 查询好友
 */
// 请求查询好友信息
message SearchFriend{
	required string mac = 1;    // 查询用户的唯一标识(SDK_ID)
}

// 返回查询信息
message ReturnFriendInfo{
	required Status status = 1;  // 返回状态
	required string info = 2;    // 返回描述
	optional FriendInfo friendInfo = 3;   // 好友信息,可为空
}
/**
 * 好友功能 - 粉丝列表
 */
// 请求粉丝列表
message GetFansList{
	required string mac = 1;      // 用户唯一标识(SDK_ID)
	optional int32 offset = 2;    // 列表最后一个玩家id
	optional int32 page = 3;      // 页码
	optional int32 page_size = 4; // 页长度
}

// 返回粉丝列表
message ReturnFansList{
	required Status status = 1;         // 返回状态
	required string info = 2;           // 返回描述
	optional int32 page = 3;            // 当前页数
	optional int32 total = 4;           // 总粉丝数
	repeated FriendInfo friendInfo = 5; // 好友信息
}
 //主要功能 - 上传游戏分数，发起挑战，上传挑战结果

enum MiniGameType {
	G_FRUIT = 1;      //扔水果
}


//上传挑战结果, 返回默认
message UploadGameResult {
	required string mac = 1;
	required MiniGameType game_type = 2;
	required int32 my_score = 3; //我的分数
	optional int32 friendId = 4; //好友id
	optional int32 friend_score = 5; //好友分数
}

//发起挑战, 返回默认
message StartGameChallenge {
	required string mac = 1;
	required MiniGameType game_type = 2;
	required int32 score = 3; //分数
	repeated int32 friendIds = 4; //好友id 数组，如果是1个人，数组就只有一个元素
}// 获取消息，进入游戏时获取一次
//地址：	/api/public/home_sms


// 请求数据
message GetNews {
	required string mac = 1;
	required string time = 2;//时间戳，10位数字，例如：1479811264
}


// 消息类型
enum NewsType {
	NEWS_NOTICE = 1;
	NEWS_REWARD = 2;
	NEWS_EGG = 3;
	NEWS_FLOWER = 4;
}

// 奖励物品
message NewsReward {
	required int32 id = 1;
	required int32 num = 2;
}


// 一条消息
message NewsInfo {
	required int32 id = 1;
	required NewsType type = 2;

	required string content = 3;//消息内容或者访问用户的用户名
	optional int32 visitId = 4;//访问用户的ID，供回访使用
	optional int32 userHead = 5;//访问用户的头像，供回访使用

	repeated NewsReward lists = 6;//奖励物品列表
}


// 返回数据
message ReturnNewsList {
	required Status status = 1;//返回状态
	required string info = 2;//返回描述
	repeated NewsInfo lists = 3;// 消息列表
}// 地块作物信息
message PetBuildInfo {
	required int32 id = 1;
	required string plantTime = 2;   // 农场没有浇水传0，牧场没有在运作传0
	optional int32 stolenTimes = 3;  // 被偷次数，请求农场数据时可以忽略，返回数据包含，访问操作时使用
	optional bool IsRipe = 4;        // 是否成熟，在使用加速道具后使用这个参数
}

// 地块信息
message PetLandInfo {
	required int32 id = 1;            //自己定义好id
	required bool isHasBuild = 2;	//牧场和游乐场还没建筑好之前是false
	optional PetBuildInfo build = 3;
}

// 乐园数据
message PetInfo {
	repeated PetLandInfo farmInfo = 1;     // 农场
	repeated PetLandInfo pastureInfo = 2;  // 牧场
	repeated PetLandInfo parkInfo = 3;     // 游乐场
	required string roles = 4;             // 有哪些角色在农场中
	optional string dogTime = 5;           // 放狗时间，没有传的话表示没有狗
}

// 上传数据给服务器
message UploadPetInfo {
	required string mac = 1;          //用户mac
	required PetInfo petInfo = 2;
}

// 服务器返回信息
message ReturnPetInfo {
	required Status status = 1; // 返回状态
	required string info = 2;   // 返回描述
	required string time = 3;
}

// 访问其它玩家使用以前的GetVisitUserInfo类
// 其它玩家信息
message ReturnOtherInfo {
	required Status status = 1;          // 返回状态
	required string info = 2;            // 返回描述
	optional VisitUserInfo userInfo = 3; // 用户信息
	optional PetInfo petInfo = 4;
}

///////////////////////////////

message RequestFriendMsg {
	required string mac = 1;
}

//消息返回
message FriendMsgInfo {
	required Status status = 1;     //返回状态
	required string info = 2;       //返回描述
	repeated FriendMessage msgs = 3;
}

message FriendMessage {
	required string time = 1;
	required FriendMsgType type = 2;
	required string name = 3;          //消息内容或者访问用户的用户名
	required int32 visitId = 4;        //访问用户的ID，供回访使用
	optional int32 userHead = 5;       //访问用户的头像，供回访使用
	optional string exp = 6;           //用户经验
	optional string jsonExtend = 7;    //扩展接口，json格式，type = 农场/牧场，{'land_id':{land_id},'build_id':{build_id},'plant_time':{plant_time}}；
									   //type=挑战 {"type":1, "score":1000}
									   //type=挑战结果 {"type":1,"my_score":100, "friend_score":200}
	optional bool vip = 8;
}

enum FriendMsgType {
	F_EGG = 1;			// 别人赠送鸡蛋
	F_FLOWER = 2;       // 别人赠送鲜花
	F_FARM = 3;         // 农场被偷
	F_PASTURE = 4;      // 牧场被偷
	F_FOLLOW = 5;       // 好友关注
	F_CHALLENGE = 6; 	// 游戏好友挑战
	F_RESULT = 7;		// 游戏挑战结果
}

////////////////////////////

//上传给服务器的操作记录
message PetOpList {
	required string mac = 1;
	required int32 visitId = 2;
	repeated PetOpInfo lists = 3; //操作列表
}

enum PetOpType {
	P_FARM = 1;      //农场偷菜
	P_PASTURE = 2;   //牧场偷东西
}

message PetOpInfo {
	required PetOpType opType = 1;
	optional PetLandInfo farmInfo = 2;    //如果是农场，这个会有信息
	optional PetLandInfo pastureInfo = 3; //如果是牧场，这个会有信息
}
// 获取主页排行榜
//地址：	/api/public/sort_home
// 小游戏排行榜 
//地址：	/api/public/sort_mini


// 排行榜类型
enum RankType {
	RANK_LEVEL = 1;
	RANK_EGG = 2;
	RANK_FLOWER = 3;

	RANK_MINI_MOLE = 4;
	RANK_MINI_BIRD = 5;
	RANK_MINI_RACE = 6;
	RANK_MINI_DOT = 7;
	RANK_MINI_LINK = 8;
	RANK_MINI_BUBBLE = 9;
	RANK_FANS = 10;
}
// 排行榜每个用户的数据
message RankUserInfo {
	required int32 rank = 1;
	required string name = 2;
	required string value = 3;
	optional int32 id = 4;
}
//一个类型的排行榜数据
message RankInfo {
	required RankType type = 1;
	repeated RankUserInfo lists = 2;
}


// 请求主页排行榜
message GetRankMainInfo {
	required string mac = 1;
}
// 返回主页排行榜
message RankMainInfo {
	required int32 myLevelRank = 1;

	required int32 myEggRank = 2;
	required int32 myEggNum = 3;

	required int32 myFlowerRank = 4;
	required int32 myFlowerNum = 5;

	required RankInfo levelRankInfo = 6;
	required RankInfo eggRankInfo = 7;
	required RankInfo flowerRankInfo = 8;
	optional int32 myFansRank = 9;
	optional int32 myFansNum = 10;
	optional RankInfo fansRankInfo = 11;
}
// 返回数据
message ReturnRankMainInfo {
	required Status status = 1;//返回状态
	required string info = 2;//返回描述
	optional RankMainInfo message = 3;// 消息
}

// 请求小游戏排行榜
message GetRankMiniGameInfo{
	required string mac = 1;
	required RankType type = 2;
	required int32 score = 3;//请求排行，如填写0则返回最高排行
}
// 返回小游戏排行榜
message RankMiniGameInfo {
	required int32 myGameRank = 1;
	required int32 myGameNum = 2;
	required RankInfo gameRankInfo = 3;
}
// 返回数据
message ReturnRankMiniGameInfo {
	required Status status = 1;//返回状态
	required string info = 2;//返回描述
	optional RankMiniGameInfo message = 3;// 消息
}



//备份用户数据
//mac第一次出现时注册新用户
//不提交userinfo信息时返回用户最近一次数据（删除再安装、更新）
//地址：	/user_bak


//用户信息
message UserInfo {
	required string name = 1;//用户名
	required string exp = 2; //经验
	required int32 coin = 3; //金币
	required int32 diamond = 4; //钻石
	required string itemUserInfo = 5; //服装以及装饰数据
	required string itemUserBought = 6; //已购买
	required bool isDoubleCoin = 7; //是否购买双倍金币
	required int32 eggUser = 8; //鸡蛋数量
	required int32 flowerUser = 9; //鲜花数量
	required string farmUserInfo = 10; //农场种子信息
	required string foodUserInfo = 11; //食物商店信息
	required int32 userRole = 12; //角色，熊大还是熊二
	required int32 userHead = 13; // 头像id
	required bool isFirstShare = 14; // 是否首次分享
	optional string reg_time = 15; // 注册时间

	optional string extra = 16; // 附加信息
	optional bool vip = 17;
	optional string petInfo = 18;
}

// 请求数据
message SetUserBak {
	required string mac = 1;
	optional UserInfo userinfo = 2;
}


// 返回数据
message ReturnUserBak {
	required Status status = 1;//返回状态
	required string info = 2;//返回描述
	
	optional UserInfo message= 3;
	optional string time= 4;
	optional int32 id = 5;//用户ID
}


//请求分享统计数据
//地址：	/share
//请求格式 SetUserBak 
//返回格式 ReturnShareBak
//分享链接 http://xiong.soulgame.mobi/xiong/wap/index/share/8.html 	(XXXXX代表UserInfo的id参数，链接以后可能调整)
//统计规则，每天有效100条，current_times是未领取奖励的条数，不是金币数量

//返回分享数据
message ReturnShareBak {
	required Status status = 1;//返回状态
	required string info = 2;//返回描述
	required int32 all_times = 3;//所有获得
	required int32 day_times = 4;//当天获得
	required int32 current_times = 5;//当次获得
}

//请求签到数据
//地址：	/signin
//请求格式 SetSignin 
//返回格式 ReturnSignin

//签到信息
//当请求签到没有数据时，前三个参数值都是0
//当上传签到时nowTime无需上传
message SigninInfo {
	required int32 signinId = 1; //最后签到ID
	required string lastTime = 2; //最后签到时间
}

// 请求数据
// 请求数据signininfo为空，上传数据signininfo有数据
message SetSignin {
	required string mac = 1;
	optional SigninInfo signininfo = 2;
}


// 返回数据
message ReturnSignin {
	required Status status = 1;//返回状态
	required string info = 2;//返回描述
	
	optional SigninInfo signininfo = 3;
}

// 初始化请求（机器人送鸡蛋等）
message InitData{
    required string mac = 1;
}// 访问用户的数据
//地址：	/api/public/visit
// 送礼物
//地址：	/api/public/visit_gift


// 请求访问用户的数据
message GetVisitUserInfo{
	required string mac = 1;
	optional int32 visitId = 2;
	optional int32 type = 3; // 1 - general; 2 - virtual
}
// 访问用户的数据
message VisitUserInfo {
	required int32 id = 1;
	required string name = 2;

	required string exp = 3;
	required int32 eggNum = 4;
	required int32 flowerNum = 5;

	required string itemInfo = 6;

	required int32 userHead = 7; //头像id
	optional bool vip = 8;
}
// 返回数据
message ReturnVisitUserInfo {
	required Status status = 1;//返回状态
	required string info = 2;//返回描述
	optional VisitUserInfo message= 3;
}



// 礼物类型，鲜花，鸡蛋
enum GiftType {
	GIFT_EGG = 1;
	GIFT_FLOWER = 2;
}
// 送礼物
message GiveGift {
	required string mac = 1;
	required int32 visitId = 2;
	required GiftType type = 3;
}
// 返回数据
message ReturnGiveGift {
	required Status status = 1;//返回状态
	required string info = 2;//返回描述
	optional string message= 3;
	optional int32 type = 4;// 1-鸡蛋；2-鲜花
}
